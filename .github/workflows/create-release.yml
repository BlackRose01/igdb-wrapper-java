name: Publish package to Maven Central Repository and create GitHub Release

on:
  push:
    tags:
      - 'v*'        # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:

jobs:
  nexus:
    name: Publish to Nexus
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      #- name: Release Maven package
      #  uses: samuelmeuli/action-maven-publish@v1.3.1
      #  with:
      #    gpg_private_key: ${{ secrets.PGP_KEY_PRIVATE }}
      #    gpg_passphrase: ${{ secrets.PGP_KEY_PASSPHRASE }}
      #    nexus_username: ${{ secrets.OSSRH_USERNAME }}
      #    nexus_password: ${{ secrets.OSSRH_TOKEN }}
  github:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: ossrh
      - name: Create package
        run: mvn clean package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ github.event.commits[0].message }}
          draft: false
          prerelease: false
      - name: Get Artifacts
        run: |
          ARTIFACT_PATH=$(ls target/*.jar | head -n 1)
          ARTIFACT_NAME=$(basename $ARTIFACT_PATHNAME)
          echo ::set-env name=ARTIFACT_PATH::${ARTIFACT_PATH}
          echo ::set-env name=ARTIFACT_NAME::${ARTIFACT_NAME}
      - name: Upload Release Asset
          id: upload-release-asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
            asset_path: ${{ env.ARTIFACT_PATH }}
            asset_name: ${{ env.ARTIFACT_NAME }}
            asset_content_type: application/java-archive